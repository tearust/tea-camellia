[package]
name = "pallet-cml"
version = "3.0.0"
authors = ["jacky.li <liyangwood@gmail.com>"]
edition = "2018"
license = "Apache-2.0"
homepage = "https://teaproject.org"
repository = "https://github.com/tearust/tea-camellia"
description = ""
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { package = "parity-scale-codec", version = "2.0.0", default-features = false }
sp-std = {default-features = false, version = '3.0.0', git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f'}
# Needed for various traits. In our case, `OnFinalize`.
sp-runtime = { version = "3.0.0", default-features = false, git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f' }
# Needed for type-safe access to storage DB.
frame-support = {default-features = false, version = '3.0.0', git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f'}
# `system` module provides us with all sorts of useful stuff and macros depend on it being around.
frame-system = { version = "3.0.0", default-features = false, git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f' }
frame-benchmarking = { version = "3.1.0", default-features = false, optional = true, git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f' }
log = "0.4.8"


[dev-dependencies]
sp-core = {version = '3.0.0', git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f'}
sp-io = {version = '3.0.0', git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f'}
node-primitives = { version = "2.0.0", default-features = false, git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f'}
pallet-balances = { version = "3.0.0", git = 'https://github.com/paritytech/substrate.git', rev = '90cfb952f' }

[features]
default = ["std"]
std = [
	"codec/std",
	"sp-std/std",
	"sp-runtime/std",
	"frame-support/std",
	"frame-system/std",
	"frame-benchmarking/std",
]
runtime-benchmarks = [
	"frame-benchmarking",
]
try-runtime = ["frame-support/try-runtime"]
