// Copyright 2019-2021 Tea Project
//! Autogenerated weights for pallet_cml
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-07-18, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/tea-camellia
// benchmark
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_cml
// --extrinsic=*
// --steps=50
// --repeat=20
// --heap-pages=4096
// --header=./file_header.txt
// --output=runtime/src/weights/pallet_cml.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_cml.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_cml::WeightInfo for WeightInfo<T> {
	fn transfer_coupon() -> Weight {
		(24_924_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn draw_investor_cmls_from_coupon() -> Weight {
		(754_093_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(47 as Weight))
			.saturating_add(T::DbWeight::get().writes(86 as Weight))
	}
	fn draw_team_cmls_from_coupon() -> Weight {
		(1_090_776_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(67 as Weight))
			.saturating_add(T::DbWeight::get().writes(126 as Weight))
	}
	fn active_cml() -> Weight {
		(37_235_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn start_mining() -> Weight {
		(43_480_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn stop_mining() -> Weight {
		(869_712_218_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(515 as Weight))
			.saturating_add(T::DbWeight::get().writes(514 as Weight))
	}
	fn start_balance_staking() -> Weight {
		(61_391_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn start_cml_staking() -> Weight {
		(54_256_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn stop_balance_staking(_s: u32, ) -> Weight {
		(887_066_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn stop_cml_staking(_s: u32, ) -> Weight {
		(11_384_760_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1027 as Weight))
			.saturating_add(T::DbWeight::get().writes(1026 as Weight))
	}
	fn withdraw_staking_reward() -> Weight {
		(25_194_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn pay_off_mining_credit() -> Weight {
		(47_317_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn dummy_ra_task() -> Weight {
		(22_906_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
